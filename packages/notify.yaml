notify:
  - name: gmail
    platform: smtp
    server: smtp.gmail.com
    port: 587
    timeout: 15
    sender: !secret gmail_recipient_2
    encryption: starttls
    username: !secret gmail_recipient_2
    password: !secret gmail_password
    recipient:
      - !secret gmail_recipient_1
      - !secret gmail_recipient_2
    sender_name: Pandemicabin
  - name: master_ha_notify
    platform: rest
    resource: http://192.168.100.102:8122/api/services/notify/notify
    method: POST_JSON
    headers:
      Authorization: !secret master_ha_header
    title_param_name: title
    message_param_name: message
  - name: master_ha_michael
    platform: rest
    resource: http://192.168.100.102:8122/api/services/notify/michael
    method: POST_JSON
    headers:
      Authorization: !secret master_ha_header
    title_param_name: title
    message_param_name: message
  - name: master_ha_angela
    platform: rest
    resource: http://192.168.100.102:8122/api/services/notify/angela
    method: POST_JSON
    headers:
      Authorization: !secret master_ha_header
    title_param_name: title
    message_param_name: message
  - name: master_ha_camille
    platform: rest
    resource: http://192.168.100.102:8122/api/services/notify/camille
    method: POST_JSON
    headers:
      Authorization: !secret master_ha_header
    title_param_name: title
    message_param_name: message
  - name: local_methods
    platform: group
    services:
      - service: gmail
      - service: huawei_lte

automation:
  - id: '1604383268941'
    alias: Notify when smoke detected
    description: ''
    trigger:
      - platform: state
        entity_id: 
          - binary_sensor.zcombo_g_smoke_co_alarm_smoke_alarm_smoke_detected
          - binary_sensor.zcombo_g_smoke_co_alarm_smoke_alarm_smoke_detected_2
        from: "off"
        to: "on"
    condition: []
    action:
      - service: script.notify_conditional
        data:
          recipient: all
          title: Pandemicabin Alert
          message: Smoke Detected
    mode: single

  - id: '1604383451997'
    alias: Notify when carbon monoxide detected
    description: ''
    trigger:
      - platform: state
        entity_id: 
          - binary_sensor.zcombo_g_smoke_co_alarm_co_alarm_carbon_monoxide_detected
          - binary_sensor.zcombo_g_smoke_co_alarm_co_alarm_carbon_monoxide_detected_2
        from: "off"
        to: "on"
    condition: []
    action:
      - service: script.notify_conditional
        data:
          recipient: all
          title: Pandemicabin Alert
          message: Carbon monoxide detected
    mode: single
  
script:
  notify_conditional:
    alias: 'Notify based on availablity of notifiers'
    description: ''
    fields:
      recipient:
        description: 'Who to notify'
        example: '[all|michael|angela|camille]'
      title:
        description: 'Title of the notification'
        example: 'Message Title'
      message:
        description: 'Message of the notification'
        example: 'Message body'
    sequence:
      - service: homeassistant.update_entity
        entity_id: binary_sensor.master_ha_api
      - service: >-
          {%- if states("binary_sensor.master_ha_api") != "on" -%}
            notify.local_methods
          {%- elif recipient == "michael" -%}
            notify.master_ha_michael
          {%- elif recipient == "angela" -%}
            notify.master_ha_angela
          {%- elif recipient == "camille" -%}
            notify.master_ha_camille
          {%- else -%}
            notify.master_ha_notify
          {%- endif -%}
        data:
          title: "{{ title }}"
          message: "{{ message }}"

  notify_camille_with_sound:
    alias: "Notify Camille with sound"
    variables:
      volume: >
        {{ state_attr("media_player.living_room_speaker", "volume_level") }}
    fields:
      message:
        description: Message to broadcast to speaker
        example: "Camille, time to wake up"
    sequence:
      - alias: "Raise volume on speakers"
        service: media_player.volume_set
        target:
          entity_id: media_player.notify_camille
        data:
          volume_level: 0.5
      - alias: "Google TTS to camille's speakers"
        service: tts.google_translate_say
        target:
          entity_id:
            - media_player.notify_camille
        data:
          message: "{{ message }}"
      - alias: "Return volume on speakers"
        service: media_player.volume_set
        target:
          entity_id: media_player.notify_camille
        data:
          volume_level: "{{ volume }}"
