sensor:
  - platform: imap_email_content
    server: imap.gmail.com
    name: yourporter
    port: 993
    username: !secret google_imap_username
    password: !secret google_imap_password
    folder: GetawAframe
    senders:
      - hello@yourporter.com
      - pfammatter@gmail.com

input_text:
  your_porter_email_body:
    name: "Guesty Email Body"
    max: 255
  str_off_limit_codes:
    name: "Off limit guest codes"
    pattern: "(\\d{4}, ?){0,}\\d{4}"
    mode: password
  str_guest_code_upcoming:
    name: "Guest Code: Next Reservation"
    pattern: "\\d{4}"

template:
  - sensor: 
    - name: "Guesty Listing"
      state: >-
        {{ states("input_text.your_porter_email_body") |
           regex_replace("=\r\n", "") |
           regex_findall_index("\$listing: (.*?)<br>")}}
    - name: "Guesty Checkin"
      state: >-
        {{ states("input_text.your_porter_email_body") |
           regex_replace("=\r\n", "") |
           regex_findall_index("\$inDate: (.*?)<br>")}}
    - name: "Guesty Checkout"
      state: >-
        {{ states("input_text.your_porter_email_body") |
           regex_replace("=\r\n", "") |
           regex_findall_index("\$outDate: (.*?)<br>")}}
    - name: "Guesty Next Checkout"
      state: >-
        {{ states("input_text.your_porter_email_body") |
           regex_replace("=\r\n", "") |
           regex_findall_index("\$outDate: (.*?)<br>")}}
    - name: "Guesty Guest Code"
      state: >-
        {{ states("input_text.your_porter_email_body") |
            regex_findall_index("\$guestCode: (\d{4})")}}
    - name: "Guest Prep Time"
      state: >-
        {{ as_datetime(states('input_datetime.guest_checkin'))
           - timedelta(hours=states('input_number.guest_prep_offset')|float) }}

input_datetime:
  guest_checkin:
    name: Guest Checkin
    has_date: true
    has_time: true
  guest_checkout:
    name: Guest Checkout
    has_date: true
    has_time: true
  guest_next_checkout:
    name: Next Guest Checkout
    has_date: true
    has_time: true

input_number:
  guest_prep_offset:
    name: Guest Prep Offset (hours)
    initial: 2
    min: 0
    max: 48
    step: 0.5
    unit_of_measurement: hours


automation:
  - id: be58d998-b7cb-4ba6-bbf4-2c8897e2908c
    alias: STR Check Guest Code for Conflict
    trigger:
      - platform: state
        entity_id: sensor.your_porter_guest_code
        for: "00:10:00"
    condition: []
    action:
      - alias: "Check new code against list of off limit codes"
        choose:
        - conditions: >-
            {{states("sensor.your_porter_guest_code") in
              states("input_text.str_off_limit_codes")}}
          sequence:
            service: notify.master_ha_notify
            data:
              title: GetawAframe Alert
              message: New guest code conflict!
        - conditions: >-
            {{states('input_text.guest_code') == 
              states('sensor.your_porter_guest_code')}}
          sequence:
            service: notify.master_ha_notify
            data:
              title: GetawAframe Alert
              message: New guest code matches old guest code!

  - id: c0f0e940-8166-4622-9736-2e04e38d3a1f
    alias: Guesty Guest Code Update
    trigger:
      - platform: state
        entity_id: sensor.your_porter_guest_code
        for: "00:10:00"
    condition:
      - alias: "Listing is GetawAframe"
        condition: state
        entity_id: sensor.your_porter_listing
        state: Getawaframe
    action:
      - alias: "Update guest upcoming guest code"
        service: input_text.set_value
        target:
          entity_id: input_text.str_guest_code_upcoming
        data:
          value: "{{states('sensor.your_porter_guest_code')}}"

  - id: 224608a7-a692-4872-a5f8-2a78865592b1
    alias: Guesty Checkin Update
    trigger:
      - platform: state
        entity_id: sensor.your_porter_checkin
        for: "00:10:00"
    condition:
      - alias: "Listing is GetawAframe"
        condition: state
        entity_id: sensor.your_porter_listing
        state: Getawaframe
    action:
      - alias: "Update guest checkin"
        service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.guest_checkin
        data:
          datetime: >-
            {{strptime(as_datetime(states('sensor.your_porter_checkin'))
              , '%Y-%m-%d %H:%M:%S').strftime('%Y-%m-%d 16:00:00')}}

  - id: 22505103-1d83-4bb5-8711-d4bccd54fbff
    alias: Guesty Next Checkout Update
    trigger:
      - platform: state
        entity_id: sensor.your_porter_checkout
        for: "00:00:30"
    condition:
      - alias: "Listing is Getawaframe"
        condition: state
        entity_id: sensor.your_porter_listing
        state: Getawaframe
    action:
      - alias: "Update guest checkout"
        service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.guest_next_checkout
        data:
          datetime: >-
            {{strptime(as_datetime(states('sensor.your_porter_checkout'))
              , '%Y-%m-%d %H:%M:%S').strftime('%Y-%m-%d 10:00:00')}}

  - id: 47e0c547-98bf-42ab-80cc-aa23ebca052b
    alias: Guesty Current Checkout Update
    trigger:
      - platform: state
        entity_id: input_datetime.guest_next_checkout
        for: "00:00:30"
      - platform: state
        entity_id: input_boolean.guest_mode
        from: "on"
        to: "off"
        for: "00:00:30"
    condition:
      - alias: "Guest mode is off"
        condition: state
        entity_id: input_boolean.guest_mode
        state: "off"
    action:
      - alias: "Update current guest checkout"
        service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.guest_checkout
        data:
          timestamp: >-
            {{states('input_datetime.guest_next_checkout')|as_timestamp}}

  - id: f4513555-a729-4f27-9a35-70de349f97a5 
    alias: Prep Reservation
    trigger:
      - platform: template
        value_template: >-
          {{ now().strftime("%Y-%m-%d %H:%M:00")
           == states('sensor.guest_prep_time')}}
    # condition: []
    action:
      choose:
        - alias: "Notify if guest mode is on"
          conditions:
            - condition: state
              entity_id: input_boolean.guest_mode
              state: "on"
          sequence:
            - service: notify.master_ha_notify
              data:
                title: GetawAframe Alert
                message: Reservation Prep Error. Previous guest is active.
        - alias: "Notify if service mode is on"
          conditions:
            - condition: state
              entity_id: input_boolean.service_mode
              state: "on"
          sequence:
            - service: notify.master_ha_notify
              data:
                title: GetawAframe Alert
                message: Reservation Prep Error. Service not complete.
      default:
        - alias: "Run prep reservation script"
          service: script.str_prep_reservation

  - id: 30d1b55e-a922-4b59-94cd-933cbf59f0c3 
    alias: Begin Reservation
    trigger:
      - platform: time
        at: input_datetime.guest_checkin
    # condition: []
    action:
      - alias: "Run start reservation script"
        service: script.str_start_reservation

  - id: b4d339dd-7c53-471c-a36e-b2448ac46cd4 
    alias: End Reservation
    trigger:
      - platform: time
        at: input_datetime.guest_checkout
      - platform: state
        entity_id: binary_sensor.cleared_all
        from: "off"
        to: "on"
        for: "00:60:00"
    condition:
      - alias: "Past checkout time"
        condition: time
        after: input_datetime.guest_checkout
      - alias: "Guest mode on"
        condition: state
        entity_id: input_boolean.guest_mode
        state: "on"
    action:
      - alias: "Check house is cleared"
        choose:
        - conditions:
            - alias: "Check if house marked cleare"
              condition: state
              entity_id: binary_sensor.cleared_all
              state: "off"
          sequence:
            - alias: "Notify that home is not in cleared state"
              service: notify.master_ha_notify
              data:
                title: Getawaframe Reservation
                message: Reservation ended but house not secure
        default:
          - alias: "Run end reservation script"
            service: script.str_end_reservation


  - id: c1ef9f9d-aad1-4773-90a3-5be513a51d7e 
    alias: Service has begun
    trigger:
      - platform: state
        entity_id: alarm_control_panel.alarm
        to: "disarmed"
    condition:
      - alias: "Service mode is on"
        condition: state
        entity_id: input_boolean.service_mode
        state: "on"
    action:
      - alias: "Run start service script"
        service: script.str_start_service

  - id: 447c53ea-4fb1-4731-8e46-5bdab98faa92
    alias: End Service
    trigger:
      - platform: state
        entity_id: binary_sensor.4_in_1_sensor_home_security_motion_detection_2
        from: "on"
        to: "off"
        for: "00:15:00"
    condition:
      - alias: "Front door locked"
        condition: state
        entity_id: lock.touchscreen_deadbolt_z_wave_plus
        state: "locked"
      - alias: "Back door locked"
        condition: state
        entity_id: lock.touchscreen_deadbolt_z_wave_plus_2
        state: "locked"
      - alias: "Service is in progress"
        condition: state
        entity_id: input_boolean.service_in_progress
        state: "on"
      - alias: "Service is in progress"
        condition: state
        entity_id: input_boolean.guest_mode
        state: "off"
    action:
      - alias: "Run end reserveration script"
        service: script.str_end_service

script:
  str_start_reservation:
    alias: "Start Reservation"
    sequence:
      - alias: "Update Guest Code"
        service: input_text.set_value
        target:
          entity_id: input_text.guest_code
        data:
          value: "{{states('input_text.str_guest_code_upcoming')}}"
      - alias: "Begin reservation turn on"
        service: homeassistant.turn_on
        target:
          entity_id:
            - input_boolean.guest_code_enable
            - input_boolean.guest_mode
            - input_boolean.thermostat_hold_temp
      - alias: "Begin reservation turn off"
        service: homeassistant.turn_off
        target:
          entity_id:
            - input_boolean.heat_away
      - alias: "Begin reservation notify"
        service: notify.master_ha_notify
        data:
          title: Getawaframe Reservation
          message: Starting reservation

  str_end_reservation:
    alias: "End Reservation"
    sequence:
      - alias: "End reservation turn off"
        service: homeassistant.turn_off
        target:
          entity_id:
            - input_boolean.guest_code_enable
            - input_boolean.guest_mode
      - alias: "End reservation turn on"
        service: homeassistant.turn_on
        target:
          entity_id:
            - input_boolean.service_mode
      - alias: "End reservation alarm"
        service: alarm_control_panel.alarm_arm_away
        target:
          entity_id: alarm_control_panel.alarm
      - alias: "End reservation notify"
        service: notify.master_ha_notify
        data:
          title: Getawaframe Reservation
          message: Ending reservation

  str_prep_reservation:
    alias: "Prep Reservation"
    sequence:
      - alias: "Prep reservation turn off"
        service: homeassistant.turn_off
        target:
          entity_id:
            - input_boolean.heat_away
      - alias: "Prep reservation turn on"
        service: homeassistant.turn_on
        target:
          entity_id:
            - input_boolean.guest_mode
            - input_boolean.thermostat_hold_temp
      - alias: "Warm up if heat is on"
        choose:
        - conditions:
            - alias: "Heat is on"
              condition: state
              entity_id: climate.z_wave_plus_thermostat
              state: "heat"
          sequence:
            - alias: "Set heatpoint"
              service: climate.set_temperature
              target:
                entity_id: climate.z_wave_plus_thermostat
              data:
                temperature: '{{states("input_number.guest_heat_setpoint")}}'
      - alias: "Prep reservation notify"
        service: notify.master_ha_notify
        data:
          title: Getawaframe Reservation
          message: Prepping Cabin

  str_start_service:
    alias: "Start Service"
    sequence:
      - alias: "Turn on service in progress"
        service: homeassistant.turn_on
        target:
          entity_id:
            - input_boolean.service_in_progress
      - alias: "Notify service has begun"
        service: notify.master_ha_notify
        data:
          title: GetawAframe
          message: Service has begun

  str_end_service:
    alias: "End Service"
    sequence:
      - alias: "Set alarm"
        service: alarm_control_panel.alarm_arm_away
        target:
          entity_id: alarm_control_panel.alarm
      - alias: "Turn off service mode and service in progress"
        service: homeassistant.turn_off
        target:
          entity_id:
            - input_boolean.service_in_progress
            - input_boolean.service_mode
      - alias: "Turn on heat away"
        service: homeassistant.turn_on
        target:
          entity_id: input_boolean.heat_away
      - alias: "Notify service ended"
        service: notify.master_ha_notify
        data:
          title: GetawAframe
          message: Service has ended
